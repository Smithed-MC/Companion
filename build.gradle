plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
}

version = "${project.minecraft_version}-${project.release_type}-${project.mod_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		// JEI
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// EMI
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		// REI
		name = "shedaniel"
		url = "https://maven.shedaniel.me/"
	}
	maven {
		name = "parchmentmc"
		url = "https://maven.parchmentmc.org"
	}
	maven {
		name = "quiltmc"
		url = "https://maven.quiltmc.org/repository/release"
	}
	maven {
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

loom {
	runs {
		datagenClient {
			client()
			name "Data Generation Client"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
			vmArg "-Dfabric-api.datagen.modid=smithed-companion"

			ideConfigGenerated = true
			runDir "build/resources/datagen"
		}
	}

    splitEnvironmentSourceSets()

	accessWidenerPath = file("src/main/resources/smithed.accesswidener")

	mods {
		"smithed-companion" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// JEI
	modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}")
	modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}")
	modRuntimeOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${jei_version}")
	modCompileOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}")
	modCompileOnly("mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}")

	// EMI
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}"

	// REI
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}
